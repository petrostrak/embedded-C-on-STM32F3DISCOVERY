
led_counter.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000023c  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003d0  080003d8  000103d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003d0  080003d0  000103d8  2**0
                  CONTENTS
  4 .ARM          00000000  080003d0  080003d0  000103d8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003d0  080003d8  000103d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003d0  080003d0  000103d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003d4  080003d4  000103d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000103d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000103d8  2**0
                  CONTENTS
 10 .bss          00000020  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000020  20000020  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000103d8  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000884  00000000  00000000  00010408  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000001eb  00000000  00000000  00010c8c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_loc    000000af  00000000  00000000  00010e77  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000088  00000000  00000000  00010f28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_ranges 00000140  00000000  00000000  00010fb0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00000f87  00000000  00000000  000110f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   000007ce  00000000  00000000  00012077  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00003f48  00000000  00000000  00012845  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .comment      00000050  00000000  00000000  0001678d  2**0
                  CONTENTS, READONLY
 22 .debug_frame  000000dc  00000000  00000000  000167e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080003b8 	.word	0x080003b8

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	080003b8 	.word	0x080003b8

080001d4 <main>:
#include "leds.h"

uint8_t volatile counter = 0;

int main(void)
{
 80001d4:	b510      	push	{r4, lr}
	pGPIOEmode->MODER_15 = STATE_HIGH;
}

void set_gpioe_bus()
{
	pRCCE->IOPEEN = STATE_HIGH;
 80001d6:	484d      	ldr	r0, [pc, #308]	; (800030c <main+0x138>)
	pGPIOEmode->MODER_8 = STATE_HIGH;
 80001d8:	4a4d      	ldr	r2, [pc, #308]	; (8000310 <main+0x13c>)
	pRCCE->IOPEEN = STATE_HIGH;
 80001da:	6941      	ldr	r1, [r0, #20]
 80001dc:	f441 1100 	orr.w	r1, r1, #2097152	; 0x200000
 80001e0:	6141      	str	r1, [r0, #20]

}

void set_gpioa_bus()
{
	pRCCA->IOPAEN = STATE_HIGH;
 80001e2:	6944      	ldr	r4, [r0, #20]
 80001e4:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 80001e8:	6144      	str	r4, [r0, #20]
	pGPIOEmode->MODER_8 = STATE_HIGH;
 80001ea:	6810      	ldr	r0, [r2, #0]
 80001ec:	4c49      	ldr	r4, [pc, #292]	; (8000314 <main+0x140>)
 80001ee:	2301      	movs	r3, #1
 80001f0:	f363 4011 	bfi	r0, r3, #16, #2
 80001f4:	6010      	str	r0, [r2, #0]
	pGPIOEmode->MODER_9 = STATE_HIGH;
 80001f6:	6810      	ldr	r0, [r2, #0]
 80001f8:	f363 4093 	bfi	r0, r3, #18, #2
 80001fc:	6010      	str	r0, [r2, #0]
	pGPIOEmode->MODER_10 = STATE_HIGH;
 80001fe:	6810      	ldr	r0, [r2, #0]
 8000200:	f363 5015 	bfi	r0, r3, #20, #2
 8000204:	6010      	str	r0, [r2, #0]
	pGPIOEmode->MODER_11 = STATE_HIGH;
 8000206:	6810      	ldr	r0, [r2, #0]
 8000208:	f363 5097 	bfi	r0, r3, #22, #2
 800020c:	6010      	str	r0, [r2, #0]
	pGPIOEmode->MODER_12 = STATE_HIGH;
 800020e:	6810      	ldr	r0, [r2, #0]
 8000210:	f363 6019 	bfi	r0, r3, #24, #2
 8000214:	6010      	str	r0, [r2, #0]
	pGPIOEmode->MODER_13 = STATE_HIGH;
 8000216:	6810      	ldr	r0, [r2, #0]
 8000218:	f363 609b 	bfi	r0, r3, #26, #2
 800021c:	6010      	str	r0, [r2, #0]
	pGPIOEmode->MODER_14 = STATE_HIGH;
 800021e:	6810      	ldr	r0, [r2, #0]
 8000220:	f363 701d 	bfi	r0, r3, #28, #2
 8000224:	6010      	str	r0, [r2, #0]
	pGPIOEmode->MODER_15 = STATE_HIGH;
 8000226:	6810      	ldr	r0, [r2, #0]
	pGPIOAmode->MODER_0 = STATE_LOW;
 8000228:	f04f 4190 	mov.w	r1, #1207959552	; 0x48000000
	pGPIOEmode->MODER_15 = STATE_HIGH;
 800022c:	f363 709f 	bfi	r0, r3, #30, #2
 8000230:	6010      	str	r0, [r2, #0]
	pGPIOAmode->MODER_0 = STATE_LOW;
 8000232:	680b      	ldr	r3, [r1, #0]
	seconds *= DELAY;
 8000234:	4838      	ldr	r0, [pc, #224]	; (8000318 <main+0x144>)
	pGPIOAmode->MODER_0 = STATE_LOW;
 8000236:	f36f 0301 	bfc	r3, #0, #2
 800023a:	600b      	str	r3, [r1, #0]
			led_on(counter);


			if(counter >= 9)
			{
				counter = 0;
 800023c:	f04f 0e00 	mov.w	lr, #0
	return pGPIOAinput->IDR0;
 8000240:	690b      	ldr	r3, [r1, #16]
		if(PA0ButtonPassed)
 8000242:	07db      	lsls	r3, r3, #31
 8000244:	d5fc      	bpl.n	8000240 <main+0x6c>
			counter++;
 8000246:	f894 c000 	ldrb.w	ip, [r4]
 800024a:	f10c 0c01 	add.w	ip, ip, #1
 800024e:	fa5f fc8c 	uxtb.w	ip, ip
	for(uint32_t i = 0; i < seconds; i++);
 8000252:	2300      	movs	r3, #0
 8000254:	f884 c000 	strb.w	ip, [r4]
 8000258:	3301      	adds	r3, #1
 800025a:	4283      	cmp	r3, r0
 800025c:	d3fc      	bcc.n	8000258 <main+0x84>
			led_on(counter);
 800025e:	7823      	ldrb	r3, [r4, #0]
}

// ledON sets the (i + 8)-th bit of the output data register HIGH (value: 1) (3,3 Volts)
void led_on(uint8_t i)
{
	switch (i) {
 8000260:	3b01      	subs	r3, #1
 8000262:	2b06      	cmp	r3, #6
 8000264:	d84d      	bhi.n	8000302 <main+0x12e>
 8000266:	e8df f003 	tbb	[pc, r3]
 800026a:	4247      	.short	0x4247
 800026c:	2e33383d 	.word	0x2e33383d
 8000270:	04          	.byte	0x04
 8000271:	00          	.byte	0x00
		break;
	case 6:
		pGPIOEoutput->ODR14 = STATE_HIGH;
		break;
	case 7:
		pGPIOEoutput->ODR15 = STATE_HIGH;
 8000272:	6953      	ldr	r3, [r2, #20]
 8000274:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000278:	6153      	str	r3, [r2, #20]
			if(counter >= 9)
 800027a:	7823      	ldrb	r3, [r4, #0]
 800027c:	2b08      	cmp	r3, #8
 800027e:	d9df      	bls.n	8000240 <main+0x6c>
				counter = 0;
 8000280:	f884 e000 	strb.w	lr, [r4]
	pGPIOEoutput->ODR8 = STATE_LOW;
 8000284:	6953      	ldr	r3, [r2, #20]
 8000286:	f36e 2308 	bfi	r3, lr, #8, #1
 800028a:	6153      	str	r3, [r2, #20]
	pGPIOEoutput->ODR9 = STATE_LOW;
 800028c:	6953      	ldr	r3, [r2, #20]
 800028e:	f36e 2349 	bfi	r3, lr, #9, #1
 8000292:	6153      	str	r3, [r2, #20]
	pGPIOEoutput->ODR10 = STATE_LOW;
 8000294:	6953      	ldr	r3, [r2, #20]
 8000296:	f36e 238a 	bfi	r3, lr, #10, #1
 800029a:	6153      	str	r3, [r2, #20]
	pGPIOEoutput->ODR11 = STATE_LOW;
 800029c:	6953      	ldr	r3, [r2, #20]
 800029e:	f36e 23cb 	bfi	r3, lr, #11, #1
 80002a2:	6153      	str	r3, [r2, #20]
	pGPIOEoutput->ODR12 = STATE_LOW;
 80002a4:	6953      	ldr	r3, [r2, #20]
 80002a6:	f36e 330c 	bfi	r3, lr, #12, #1
 80002aa:	6153      	str	r3, [r2, #20]
	pGPIOEoutput->ODR13 = STATE_LOW;
 80002ac:	6953      	ldr	r3, [r2, #20]
 80002ae:	f36e 334d 	bfi	r3, lr, #13, #1
 80002b2:	6153      	str	r3, [r2, #20]
	pGPIOEoutput->ODR14 = STATE_LOW;
 80002b4:	6953      	ldr	r3, [r2, #20]
 80002b6:	f36e 338e 	bfi	r3, lr, #14, #1
 80002ba:	6153      	str	r3, [r2, #20]
	pGPIOEoutput->ODR15 = STATE_LOW;
 80002bc:	6953      	ldr	r3, [r2, #20]
 80002be:	f36e 33cf 	bfi	r3, lr, #15, #1
 80002c2:	6153      	str	r3, [r2, #20]
}
 80002c4:	e7bc      	b.n	8000240 <main+0x6c>
		pGPIOEoutput->ODR14 = STATE_HIGH;
 80002c6:	6953      	ldr	r3, [r2, #20]
 80002c8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80002cc:	6153      	str	r3, [r2, #20]
		break;
 80002ce:	e7d4      	b.n	800027a <main+0xa6>
		pGPIOEoutput->ODR13 = STATE_HIGH;
 80002d0:	6953      	ldr	r3, [r2, #20]
 80002d2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80002d6:	6153      	str	r3, [r2, #20]
		break;
 80002d8:	e7cf      	b.n	800027a <main+0xa6>
		pGPIOEoutput->ODR12 = STATE_HIGH;
 80002da:	6953      	ldr	r3, [r2, #20]
 80002dc:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80002e0:	6153      	str	r3, [r2, #20]
		break;
 80002e2:	e7ca      	b.n	800027a <main+0xa6>
		pGPIOEoutput->ODR11 = STATE_HIGH;
 80002e4:	6953      	ldr	r3, [r2, #20]
 80002e6:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80002ea:	6153      	str	r3, [r2, #20]
		break;
 80002ec:	e7c5      	b.n	800027a <main+0xa6>
		pGPIOEoutput->ODR10 = STATE_HIGH;
 80002ee:	6953      	ldr	r3, [r2, #20]
 80002f0:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80002f4:	6153      	str	r3, [r2, #20]
		break;
 80002f6:	e7c0      	b.n	800027a <main+0xa6>
		pGPIOEoutput->ODR9 = STATE_HIGH;
 80002f8:	6953      	ldr	r3, [r2, #20]
 80002fa:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80002fe:	6153      	str	r3, [r2, #20]
		break;
 8000300:	e7bb      	b.n	800027a <main+0xa6>
		break;
	default:
		pGPIOEoutput->ODR8 = STATE_HIGH;
 8000302:	6953      	ldr	r3, [r2, #20]
 8000304:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000308:	6153      	str	r3, [r2, #20]
		break;
 800030a:	e7b6      	b.n	800027a <main+0xa6>
 800030c:	40021000 	.word	0x40021000
 8000310:	48001000 	.word	0x48001000
 8000314:	2000001c 	.word	0x2000001c
 8000318:	000493e0 	.word	0x000493e0

0800031c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800031c:	480d      	ldr	r0, [pc, #52]	; (8000354 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800031e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000320:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000324:	480c      	ldr	r0, [pc, #48]	; (8000358 <LoopForever+0x6>)
  ldr r1, =_edata
 8000326:	490d      	ldr	r1, [pc, #52]	; (800035c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000328:	4a0d      	ldr	r2, [pc, #52]	; (8000360 <LoopForever+0xe>)
  movs r3, #0
 800032a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800032c:	e002      	b.n	8000334 <LoopCopyDataInit>

0800032e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800032e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000330:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000332:	3304      	adds	r3, #4

08000334 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000334:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000336:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000338:	d3f9      	bcc.n	800032e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800033a:	4a0a      	ldr	r2, [pc, #40]	; (8000364 <LoopForever+0x12>)
  ldr r4, =_ebss
 800033c:	4c0a      	ldr	r4, [pc, #40]	; (8000368 <LoopForever+0x16>)
  movs r3, #0
 800033e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000340:	e001      	b.n	8000346 <LoopFillZerobss>

08000342 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000342:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000344:	3204      	adds	r2, #4

08000346 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000346:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000348:	d3fb      	bcc.n	8000342 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800034a:	f000 f811 	bl	8000370 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800034e:	f7ff ff41 	bl	80001d4 <main>

08000352 <LoopForever>:

LoopForever:
  b LoopForever
 8000352:	e7fe      	b.n	8000352 <LoopForever>
  ldr   r0, =_estack
 8000354:	2000a000 	.word	0x2000a000
  ldr r0, =_sdata
 8000358:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800035c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000360:	080003d8 	.word	0x080003d8
  ldr r2, =_sbss
 8000364:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000368:	20000020 	.word	0x20000020

0800036c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800036c:	e7fe      	b.n	800036c <ADC1_2_IRQHandler>
	...

08000370 <__libc_init_array>:
 8000370:	b570      	push	{r4, r5, r6, lr}
 8000372:	4d0d      	ldr	r5, [pc, #52]	; (80003a8 <__libc_init_array+0x38>)
 8000374:	4c0d      	ldr	r4, [pc, #52]	; (80003ac <__libc_init_array+0x3c>)
 8000376:	1b64      	subs	r4, r4, r5
 8000378:	10a4      	asrs	r4, r4, #2
 800037a:	2600      	movs	r6, #0
 800037c:	42a6      	cmp	r6, r4
 800037e:	d109      	bne.n	8000394 <__libc_init_array+0x24>
 8000380:	4d0b      	ldr	r5, [pc, #44]	; (80003b0 <__libc_init_array+0x40>)
 8000382:	4c0c      	ldr	r4, [pc, #48]	; (80003b4 <__libc_init_array+0x44>)
 8000384:	f000 f818 	bl	80003b8 <_init>
 8000388:	1b64      	subs	r4, r4, r5
 800038a:	10a4      	asrs	r4, r4, #2
 800038c:	2600      	movs	r6, #0
 800038e:	42a6      	cmp	r6, r4
 8000390:	d105      	bne.n	800039e <__libc_init_array+0x2e>
 8000392:	bd70      	pop	{r4, r5, r6, pc}
 8000394:	f855 3b04 	ldr.w	r3, [r5], #4
 8000398:	4798      	blx	r3
 800039a:	3601      	adds	r6, #1
 800039c:	e7ee      	b.n	800037c <__libc_init_array+0xc>
 800039e:	f855 3b04 	ldr.w	r3, [r5], #4
 80003a2:	4798      	blx	r3
 80003a4:	3601      	adds	r6, #1
 80003a6:	e7f2      	b.n	800038e <__libc_init_array+0x1e>
 80003a8:	080003d0 	.word	0x080003d0
 80003ac:	080003d0 	.word	0x080003d0
 80003b0:	080003d0 	.word	0x080003d0
 80003b4:	080003d4 	.word	0x080003d4

080003b8 <_init>:
 80003b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ba:	bf00      	nop
 80003bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003be:	bc08      	pop	{r3}
 80003c0:	469e      	mov	lr, r3
 80003c2:	4770      	bx	lr

080003c4 <_fini>:
 80003c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003c6:	bf00      	nop
 80003c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003ca:	bc08      	pop	{r3}
 80003cc:	469e      	mov	lr, r3
 80003ce:	4770      	bx	lr
